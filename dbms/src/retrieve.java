
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;


public class retrieve extends javax.swing.JFrame {
String url1,name1,pass1,db_name1;
int num=0;
String n ,n1,n2,n3,n4,n5,n6;
    /**
     * Creates new form retrieve
     */
    public retrieve() {
        initComponents();
        setLocationRelativeTo(null);
    }
    retrieve(String url, String name, String pass, String dbname) {
     url1=url;
     name1=name;
     pass1=pass;
     db_name1=dbname;
        initComponents();
        setLocationRelativeTo(null);    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        op1 = new javax.swing.JOptionPane();
        jLabel2 = new javax.swing.JLabel();
        t2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Table Data");

        jLabel2.setText("Enter Table Name");

        t2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t2ActionPerformed(evt);
            }
        });

        jButton2.setText("Retrieve");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tb1.setEnabled(false);
        jScrollPane1.setViewportView(tb1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/squre/sqblueback32.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/squre/sqblueinfo32.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel model=( DefaultTableModel) tb1.getModel();
String name=t2.getText();

if(name.equals("")){
    op1.showMessageDialog(null,"Enter Table Name");
}
else{
    int i=1;
    final String db_url="jdbc:mysql://"+url1+"/"+db_name1;
      final String uid=name1;
      final String pass=pass1;
        try{
          Class.forName("com.mysql.jdbc.Driver");
          Connection con=DriverManager.getConnection(db_url,uid,pass);
          Statement stmt=con.createStatement();
          ResultSet rs1=stmt.executeQuery("describe "+name+"");
           while(rs1.next()){
              String one1=rs1.getString("Field");
              num++;
           }
           switch (num) {
               case 2:{
          ResultSet rs=stmt.executeQuery("describe "+name+"");
          while(rs.next()){
              String one=rs.getString("Field");
              
              if(i==1){
              n=one;
              model.addColumn(one);
              }
              else {
              n1=one;
              model.addColumn(one);
              }
              
              i++;
              
          } 
          break;
              }
              case 3:{
          ResultSet rs=stmt.executeQuery("describe "+name+"");
          while(rs.next()){
              String one=rs.getString("Field");
              
              if(i==1){
              n=one;
              model.addColumn(one);
              }
              else if(i==2){
              n1=one;
              model.addColumn(one);
              }
              else{
              n2=one;
              model.addColumn(one);
              }
              i++;
              
          } 
          break;
              }
              case 4:{
          ResultSet rs=stmt.executeQuery("describe "+name+"");
          while(rs.next()){
              String one=rs.getString("Field");
              
              if(i==1){
              n=one;
              model.addColumn(one);
              }
              else if(i==2){
              n1=one;
              model.addColumn(one);
              }
              else if(i==3){
              n2=one;
              model.addColumn(one);
              }
              else{
                  n3=one;
                  model.addColumn(one);
              }
              i++;
          } 
          break;
              }
              case 5:{
          ResultSet rs=stmt.executeQuery("describe "+name+"");
          while(rs.next()){
              String one=rs.getString("Field");
              
              if(i==1){
              n=one;
              model.addColumn(one);
              }
              else if(i==2){
              n1=one;
              model.addColumn(one);
              }
              else if(i==3){
              n2=one;
              model.addColumn(one);
              }
              else if(i==4){
                  n3=one;
                  model.addColumn(one);
              }
              else{
                  n4=one;
                  model.addColumn(one);
              }
              i++;
          } 
          break;
              }
               case 6:{
          ResultSet rs=stmt.executeQuery("describe "+name+"");
          while(rs.next()){
              String one=rs.getString("Field");
              
              if(i==1){
              n=one;
              model.addColumn(one);
              }
              else if(i==2){
              n1=one;
              model.addColumn(one);
              }
              else if(i==3){
              n2=one;
              model.addColumn(one);
              }
              else if(i==4){
                  n3=one;
                  model.addColumn(one);
              }
              else if(i==5){
                  n4=one;
                  model.addColumn(one);
              }
              else{
                  n5=one;
                  model.addColumn(one);
              }
              i++;
          } 
          break;
              }
                default:{
          ResultSet rs=stmt.executeQuery("describe "+name+"");
          while(rs.next()){
              String one=rs.getString("Field");
              
              if(i==1){
              n=one;
              model.addColumn(one);
              }
              else if(i==2){
              n1=one;
              model.addColumn(one);
              }
              else if(i==3){
              n2=one;
              model.addColumn(one);
              }
              else if(i==4){
                  n3=one;
                  model.addColumn(one);
              }
              else if(i==5){
                  n4=one;
                  model.addColumn(one);
              }
              else if(i==6){
                  n5=one;
                  model.addColumn(one);
              }
              else{
                  n6=one;
                  model.addColumn(one);
              }
              i++;
          } 
          break;
              }
}
           
           switch (num) {
               case 2:{
          ResultSet rs=stmt.executeQuery("select * from "+name+"");
          while(rs.next()){
              String one=rs.getString(n);
              String two=rs.getString(n1);
              
              model.addRow(new Object[] {one, two });
          } 
          break;
              }
              case 3:{
          ResultSet rs=stmt.executeQuery("select * from "+name+"");
          while(rs.next()){
              String one=rs.getString(n);
              String two=rs.getString(n1);
              String three=rs.getString(n2);
              model.addRow(new Object[] {one, two, three });
          } 
          break;
              }
              case 4:{
          ResultSet rs=stmt.executeQuery("select * from "+name+"");
          while(rs.next()){
              String one=rs.getString(n);
              String two=rs.getString(n1);
              String three=rs.getString(n2);
              String Four=rs.getString(n3);
              model.addRow(new Object[] {one, two, three, Four });
          } 
          break;
              }
              case 5:{
          ResultSet rs=stmt.executeQuery("select * from "+name+"");
          while(rs.next()){
              String one=rs.getString(n);
              String two=rs.getString(n1);
              String three=rs.getString(n2);
              String Four=rs.getString(n3);
              String Five=rs.getString(n4);
              model.addRow(new Object[] {one, two, three, Four, Five });
          } 
          break;
              }
               case 6:{
          ResultSet rs=stmt.executeQuery("select * from "+name+"");
          while(rs.next()){
            String one=rs.getString(n);
              String two=rs.getString(n1);
              String three=rs.getString(n2);
              String Four=rs.getString(n3);
              String Five=rs.getString(n4);
              String Six=rs.getString(n5);
              model.addRow(new Object[] {one, two, three, Four, Five,Six });
          } 
          break;
              }
                default:{
          ResultSet rs=stmt.executeQuery("select * from "+name+"");
          while(rs.next()){
            String one=rs.getString(n);
              String two=rs.getString(n1);
              String three=rs.getString(n2);
              String Four=rs.getString(n3);
              String Five=rs.getString(n4);
              String Six=rs.getString(n5);
              String Seven=rs.getString(n6);
              model.addRow(new Object[] {one, two, three, Four, Five,Six,Seven });
          } 
          break;
              }
}
           jButton2.setEnabled(false);
        }
        catch(Exception e)
{
op1.showMessageDialog(null,e.getMessage());
}
}
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void t2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
this.setVisible(false);
new Table_operations(url1,name1,pass1,db_name1).setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        op1.showMessageDialog(null,"This will show the content of the table ");
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(retrieve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(retrieve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(retrieve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(retrieve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new retrieve().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JOptionPane op1;
    private javax.swing.JTextField t2;
    private javax.swing.JTable tb1;
    // End of variables declaration//GEN-END:variables
}
